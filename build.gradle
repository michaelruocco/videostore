plugins {
    id "java-library"
    id "com.github.ben-manes.versions" version "0.38.0"
    id "com.diffplug.spotless" version "5.11.0"
    id "nebula.lint" version "16.17.0"
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = "1.18.18"

    junitVersion = "5.8.0-M1"
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

tasks.withType(Test) {
    useJUnitPlatform()
}

gradleLint {
    rules = ['all-dependency']
    alwaysRun = false
}

spotless {
    java {
        removeUnusedImports()
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()

        replace 'Not enough space after if', 'if(', 'if ('
        replaceRegex 'Too much space after if', 'if +\\(', 'if ('

        replace 'Not enough space after for', 'for(', 'for ('
        replaceRegex 'Too much space after for', 'for +\\(', 'for ('

        replace 'Not enough space after while', 'while(', 'while ('
        replaceRegex 'Too much space after while', 'while +\\(', 'while ('
    }
}